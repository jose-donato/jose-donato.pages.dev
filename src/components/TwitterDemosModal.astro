---
import { Tweet } from "@astro-community/astro-embed-twitter";
import Icon from "./Icon.astro";
import { socialMediaContent } from "../data/socialMedia";

// Filter and sort Twitter content only by date (newest first)
const twitterContent = socialMediaContent
  .filter(item => item.type === 'tweet')
  .sort((a, b) => {
    const [dayA, monthA, yearA] = a.date.split('-').map(Number);
    const [dayB, monthB, yearB] = b.date.split('-').map(Number);
    const dateA = new Date(yearA, monthA - 1, dayA);
    const dateB = new Date(yearB, monthB - 1, dayB);
    return dateB.getTime() - dateA.getTime();
  });
---

<twitter-demos-modal>
  <div class="modal-backdrop">
    <div class="modal-content">
      <div class="modal-header">
        <div class="flex items-center gap-3">
          <div class="flex-shrink-0 w-8 h-8 bg-bullish-500/10 rounded-lg flex items-center justify-center">
            <Icon id="material-symbols-trending-up" className="w-4 h-4 text-bullish-400" />
          </div>
          <h3 class="modal-title">Twitter Posts</h3>
        </div>
        <button class="modal-close" aria-label="Close modal">
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div class="modal-body">
        <p class="text-text-muted text-sm mb-6 leading-relaxed">
          Check out my latest Twitter posts showcasing demos, tools, and projects. Follow along for real-time updates on my development journey.
        </p>
        
        <div class="demos-grid">
          {
            twitterContent.map((item) => (
              <article class="demo-item">
                <div class="demo-content">
                  <Tweet theme="dark" id={item.url} />
                </div>
                
                <div class="demo-metadata">
                  <div class="flex items-center gap-3 text-sm text-text-muted">
                    <time>{item.date}</time>
                    <span>•</span>
                    <span class="font-medium text-bullish-400">
                      Twitter
                    </span>
                    {item.title && (
                      <>
                        <span>•</span>
                        <span class="text-text-secondary">{item.title}</span>
                      </>
                    )}
                  </div>
                  
                  {item.tags && (
                    <div class="flex gap-2 mt-2">
                      {item.tags.slice(0, 3).map((tag) => (
                        <span class="text-xs px-2 py-1 bg-bullish-600/20 text-bullish-300 rounded-full">
                          #{tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
                
                {item.description && (
                  <p class="text-text-secondary text-sm leading-relaxed mt-3">
                    {item.description}
                  </p>
                )}
              </article>
            ))
          }
        </div>
        
        <div class="mt-8 text-center">
          <a 
            href="https://twitter.com/josedonato__" 
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 text-sm link group"
          >
            Follow me on Twitter
            <Icon 
              id="material-symbols-arrow-outward" 
              className="w-4 h-4 group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-200" 
            />
          </a>
        </div>
      </div>
    </div>
  </div>
</twitter-demos-modal>

<script>
  class TwitterDemosModal extends HTMLElement {
    private modal: HTMLElement | null = null;
    private backdrop: HTMLElement | null = null;
    private closeButton: HTMLElement | null = null;

    constructor() {
      super();
      this.modal = this.querySelector(".modal-backdrop");
      this.backdrop = this.querySelector(".modal-backdrop");
      this.closeButton = this.querySelector(".modal-close");
    }

    connectedCallback() {
      this.setupEventListeners();
      this.hide(); // Initially hidden
    }

    setupEventListeners() {
      // Close on backdrop click
      this.backdrop?.addEventListener("click", (e) => {
        if (e.target === this.backdrop) {
          this.hide();
        }
      });

      // Close on close button click
      this.closeButton?.addEventListener("click", () => {
        this.hide();
      });

      // Close on escape key
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && this.isVisible()) {
          this.hide();
        }
      });
    }

    show() {
      if (this.modal) {
        this.modal.style.display = "flex";
        document.body.style.overflow = "hidden";

        // Focus management
        this.closeButton?.focus();
      }
    }

    hide() {
      if (this.modal) {
        this.modal.style.display = "none";
        document.body.style.overflow = "";
      }
    }

    isVisible() {
      return this.modal?.style.display === "flex";
    }
  }

  customElements.define("twitter-demos-modal", TwitterDemosModal);

  // Global function to show Twitter demos modal
  window.showTwitterDemosModal = () => {
    const modal = document.querySelector("twitter-demos-modal") as TwitterDemosModal;
    if (modal) {
      modal.show();
    }
  };

  // Declare global function type
  declare global {
    interface Window {
      showTwitterDemosModal: () => void;
    }
  }
</script>

<style>
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    padding: 1rem;
  }

  .modal-content {
    background: var(--bg-primary, #1a1a1a);
    border-radius: 0.75rem;
    max-width: 90vw;
    max-height: 90vh;
    width: 100%;
    max-width: 1200px;
    position: relative;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    overflow: hidden;
  }

  .modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem 1.5rem 1rem;
    border-bottom: 1px solid var(--border-primary, #333);
    position: sticky;
    top: 0;
    background: var(--bg-primary, #1a1a1a);
    z-index: 10;
  }

  .modal-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary, #fff);
    margin: 0;
  }

  .modal-close {
    background: none;
    border: none;
    color: var(--text-muted, #888);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition:
      color 0.2s,
      background-color 0.2s;
  }

  .modal-close:hover {
    color: var(--text-primary, #fff);
    background-color: var(--bg-secondary, #2a2a2a);
  }

  .modal-body {
    padding: 1.5rem;
    max-height: calc(90vh - 120px);
    overflow-y: auto;
  }

  .demos-grid {
    display: grid;
    gap: 2rem;
    grid-template-columns: 1fr;
  }

  .demo-item {
    border: 1px solid var(--border-primary, #333);
    border-radius: 0.75rem;
    padding: 1.5rem;
    background: var(--bg-secondary, #2a2a2a);
    transition: border-color 0.2s;
  }

  .demo-item:hover {
    border-color: var(--bullish-600, #4ade80);
  }

  .demo-content {
    margin-bottom: 1rem;
  }

  .demo-metadata {
    border-top: 1px solid var(--border-primary, #333);
    padding-top: 1rem;
  }

  @media (min-width: 768px) {
    .demos-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 768px) {
    .modal-content {
      margin: 1rem;
      max-width: calc(100vw - 2rem);
    }

    .modal-header {
      padding: 1rem 1rem 0.75rem;
    }

    .modal-body {
      padding: 1rem;
    }

    .modal-title {
      font-size: 1.125rem;
    }

    .demo-item {
      padding: 1rem;
    }

    .demos-grid {
      grid-template-columns: 1fr;
    }
  }

  /* Custom scrollbar for modal body */
  .modal-body::-webkit-scrollbar {
    width: 6px;
  }

  .modal-body::-webkit-scrollbar-track {
    background: var(--bg-secondary, #2a2a2a);
    border-radius: 3px;
  }

  .modal-body::-webkit-scrollbar-thumb {
    background: var(--bullish-600, #4ade80);
    border-radius: 3px;
  }

  .modal-body::-webkit-scrollbar-thumb:hover {
    background: var(--bullish-500, #22c55e);
  }
</style>