---
import { Tweet } from "@astro-community/astro-embed-twitter";
import Icon from "./Icon.astro";
import LinkCTA from "./LinkCTA.astro";
import Modal from "./Modal.astro";
import { socialMediaContent } from "../data/socialMedia";

// Filter and sort Twitter content only by date (newest first)
const twitterContent = socialMediaContent
  .filter((item) => item.type === "tweet")
  .sort((a, b) => {
    const [dayA, monthA, yearA] = a.date.split("-").map(Number);
    const [dayB, monthB, yearB] = b.date.split("-").map(Number);
    const dateA = new Date(yearA, monthA - 1, dayA);
    const dateB = new Date(yearB, monthB - 1, dayB);
    return dateB.getTime() - dateA.getTime();
  });
---

<Modal id="twitter-demos" title="Twitter/X Posts" size="lg" headerActions={true}>
  <div slot="header-actions" class="flex items-center gap-3">
    <div
      class="flex-shrink-0 w-8 h-8 bg-bullish-500/10 rounded-lg flex items-center justify-center"
    >
      <Icon
        id="proicons-x-twitter"
        className="w-4 h-4 text-bullish-400"
      />
    </div>
  </div>
  
  <twitter-demos-content>
        <div class="mb-6 text-center">
          <p class="text-text-muted text-sm leading-relaxed mb-4">
            Check out my latest Twitter posts showcasing demos, tools, and projects for real-time updates on my development journey.
          </p>
          <LinkCTA 
            href="https://x.com/josedonato__"
            text="Follow me on X"
            iconId="proicons-x-twitter"
            target="_blank"
            rel="noopener noreferrer"
          />
        </div>

        <div class="carousel-container">
          <button class="carousel-nav prev" aria-label="Previous tweet">
            <Icon
              id="material-symbols-chevron-left-rounded"
              className="w-5 h-5"
            />
          </button>

          <div class="carousel-wrapper">
            <div class="carousel-track">
              {
                twitterContent.map((item, index) => (
                  <div class="carousel-slide" data-index={index}>
                    <div class="tweet-container">
                      <Tweet theme="dark" id={item.url} />
                    </div>
                  </div>
                ))
              }
            </div>
          </div>

          <button class="carousel-nav next" aria-label="Next tweet">
            <Icon
              id="material-symbols-chevron-right-rounded"
              className="w-5 h-5"
            />
          </button>
        </div>

        <div class="carousel-indicators">
          {
            twitterContent.map((_, index) => (
              <button
                class="indicator"
                data-index={index}
                aria-label={`Go to tweet ${index + 1}`}
              />
            ))
          }
        </div>
      </div>
    </twitter-demos-content>
  </Modal>

<script>
  class TwitterDemosContent extends HTMLElement {
    private carouselTrack: HTMLElement | null = null;
    private prevButton: HTMLButtonElement | null = null;
    private nextButton: HTMLButtonElement | null = null;
    private indicators: NodeListOf<HTMLElement> | null = null;
    private currentIndex: number = 0;
    private totalSlides: number = 0;
    private modal: HTMLElement | null = null;

    constructor() {
      super();
      this.carouselTrack = this.querySelector(".carousel-track");
      this.prevButton = this.querySelector(
        ".carousel-nav.prev",
      ) as HTMLButtonElement;
      this.nextButton = this.querySelector(
        ".carousel-nav.next",
      ) as HTMLButtonElement;
      this.indicators = this.querySelectorAll(".indicator");
      this.totalSlides = this.querySelectorAll(".carousel-slide").length;
      this.modal = document.querySelector('modal-component[data-modal-id="twitter-demos"]');
    }

    connectedCallback() {
      this.setupEventListeners();
      this.updateCarousel();
      
      // Listen for modal show event to load Twitter script
      this.modal?.addEventListener('modal:show', () => {
        this.currentIndex = 0;
        this.updateCarousel();
        this.loadTwitterScript();
      });
    }

    setupEventListeners() {
      // Close on escape key
      document.addEventListener("keydown", (e) => {
        if (this.modal && (this.modal as any).isVisible()) {
          if (e.key === "ArrowLeft") {
            this.goToPrev();
          } else if (e.key === "ArrowRight") {
            this.goToNext();
          }
        }
      });

      // Carousel navigation
      this.prevButton?.addEventListener("click", () => {
        this.goToPrev();
      });

      this.nextButton?.addEventListener("click", () => {
        this.goToNext();
      });

      // Indicator clicks
      this.indicators?.forEach((indicator, index) => {
        indicator.addEventListener("click", () => {
          this.goToSlide(index);
        });
      });
    }

    goToPrev() {
      this.currentIndex =
        this.currentIndex > 0 ? this.currentIndex - 1 : this.totalSlides - 1;
      this.updateCarousel();
    }

    goToNext() {
      this.currentIndex =
        this.currentIndex < this.totalSlides - 1 ? this.currentIndex + 1 : 0;
      this.updateCarousel();
    }

    goToSlide(index: number) {
      this.currentIndex = index;
      this.updateCarousel();
    }

    updateCarousel() {
      if (this.carouselTrack) {
        const translateX = -this.currentIndex * 100;
        this.carouselTrack.style.transform = `translateX(${translateX}%)`;
      }

      // Update indicators
      this.indicators?.forEach((indicator, index) => {
        if (index === this.currentIndex) {
          indicator.classList.add("active");
        } else {
          indicator.classList.remove("active");
        }
      });

      // Update navigation buttons
      if (this.prevButton) {
        this.prevButton.style.opacity = this.totalSlides <= 1 ? "0.3" : "1";
        this.prevButton.disabled = this.totalSlides <= 1;
      }
      if (this.nextButton) {
        this.nextButton.style.opacity = this.totalSlides <= 1 ? "0.3" : "1";
        this.nextButton.disabled = this.totalSlides <= 1;
      }
    }

    private loadTwitterScript() {
      // Check if script is already loaded
      if (document.querySelector('script[src="https://platform.twitter.com/widgets.js"]')) {
        return;
      }

      const script = document.createElement('script');
      script.async = true;
      script.src = 'https://platform.twitter.com/widgets.js';
      document.head.appendChild(script);
    }
  }

  customElements.define("twitter-demos-content", TwitterDemosContent);

  // Global function to show Twitter demos modal
  window.showTwitterDemosModal = () => {
    window.showModal("twitter-demos");
  };

  // Declare global function type
  declare global {
    interface Window {
      showTwitterDemosModal: () => void;
    }
  }
</script>

<style>
  .carousel-container {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1rem;
    flex: 1;
    min-height: 0;
  }

  .carousel-wrapper {
    flex: 1;
    overflow: hidden;
    border-radius: 0.75rem;
    height: 100%;
  }

  .carousel-track {
    display: flex;
    height: 100%;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .carousel-slide {
    width: 100%;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }

  .tweet-container {
    display: flex;
    justify-content: center;
    width: 100%;
    max-width: 550px;
    overflow-y: auto;
    max-height: 100%;
  }

  .tweet-container :global(iframe) {
    min-height: 500px !important;
    max-height: none !important;
    overflow-y: visible;
  }

  .tweet-container :global(blockquote) {
    min-height: 500px !important;
    max-height: none !important;
    overflow-y: visible;
    margin: 0 !important;
  }

  .carousel-nav {
    background: var(--bg-secondary, #2a2a2a);
    border: 1px solid var(--border-primary, #333);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-muted, #888);
    cursor: pointer;
    transition: all 0.2s ease;
    flex-shrink: 0;
  }

  .carousel-nav:hover:not(:disabled) {
    background: var(--bullish-600, #4ade80);
    border-color: var(--bullish-600, #4ade80);
    color: var(--bg-primary, #1a1a1a);
    transform: scale(1.05);
  }

  .carousel-nav:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .carousel-indicators {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1.5rem;
  }

  .indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--border-primary, #333);
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .indicator:hover {
    background: var(--text-muted, #888);
    transform: scale(1.2);
  }

  .indicator.active {
    background: var(--bullish-600, #4ade80);
    transform: scale(1.3);
  }

  @media (max-width: 768px) {
    .carousel-container {
      flex-direction: column;
      gap: 1rem;
      height: 100%;
    }

    .carousel-wrapper {
      order: 1;
      height: auto;
      min-height: 400px;
    }

    .carousel-nav {
      display: none;
    }

    .tweet-container {
      max-width: 100%;
      width: 100%;
      padding: 0;
    }

    .carousel-slide {
      padding: 0;
      min-height: 400px;
    }

    .tweet-container :global(iframe) {
      width: 100% !important;
      max-width: 100% !important;
      min-height: 400px !important;
      max-height: none !important;
    }

    .tweet-container :global(blockquote) {
      width: 100% !important;
      max-width: 100% !important;
      min-height: 400px !important;
      max-height: none !important;
    }

    .carousel-indicators {
      order: 2;
      margin-top: 1rem;
    }
  }

  /* Custom scrollbar for tweet containers */
  .tweet-container::-webkit-scrollbar {
    width: 6px;
  }

  .tweet-container::-webkit-scrollbar-track {
    background: var(--bg-secondary, #2a2a2a);
    border-radius: 3px;
  }

  .tweet-container::-webkit-scrollbar-thumb {
    background: var(--bullish-600, #4ade80);
    border-radius: 3px;
  }

  .tweet-container::-webkit-scrollbar-thumb:hover {
    background: var(--bullish-500, #22c55e);
  }
</style>
