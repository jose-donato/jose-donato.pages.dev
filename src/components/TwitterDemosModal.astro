---
import { Tweet } from "@astro-community/astro-embed-twitter";
import Icon from "./Icon.astro";
import Modal from "./Modal.astro";
import { socialMediaContent } from "../data/socialMedia";

// Filter and sort Twitter content only by date (newest first)
const twitterContent = socialMediaContent
  .filter((item) => item.type === "tweet")
  .sort((a, b) => {
    const [dayA, monthA, yearA] = a.date.split("-").map(Number);
    const [dayB, monthB, yearB] = b.date.split("-").map(Number);
    const dateA = new Date(yearA, monthA - 1, dayA);
    const dateB = new Date(yearB, monthB - 1, dayB);
    return dateB.getTime() - dateA.getTime();
  });

const titleContent = `
  <div class="flex items-center gap-3">
    <div class="flex-shrink-0 w-8 h-8 bg-bullish-500/10 rounded-lg flex items-center justify-center">
      <svg class="w-4 h-4 text-bullish-400" viewBox="0 0 24 24" fill="currentColor">
        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
      </svg>
    </div>
    <span>Twitter/X Posts</span>
  </div>
`;

const headerActions = `
  <a
    href="https://x.com/josedonato__"
    target="_blank"
    rel="noopener noreferrer"
    class="bg-transparent border-none text-text-muted cursor-pointer p-2 rounded-md transition-colors duration-200 hover:text-text-primary hover:bg-bg-secondary text-decoration-none flex items-center justify-center"
    aria-label="Follow me on X"
  >
    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
      <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
    </svg>
  </a>
`;
---

<twitter-demos-modal>
  <Modal id="twitter" title={titleContent} titleHtml={true} maxWidth="1000px" height="80vh" headerActions={headerActions}>
    <div class="flex flex-col h-full">

      <div class="carousel-container relative flex-1 overflow-hidden">
        <!-- Navigation buttons positioned absolutely -->
        <button class="carousel-nav prev absolute left-4 top-1/2 -translate-y-1/2 z-20 bg-bg-secondary/95 backdrop-blur-sm border border-border-primary rounded-full w-14 h-14 flex items-center justify-center text-text-muted cursor-pointer transition-all duration-300 hover:bg-bullish-600 hover:border-bullish-600 hover:text-bg-primary hover:scale-110 disabled:opacity-20 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:bg-bg-secondary/95 shadow-xl" aria-label="Previous tweet">
          <Icon
            id="material-symbols-chevron-left-rounded"
            className="w-6 h-6"
          />
        </button>

        <button class="carousel-nav next absolute right-4 top-1/2 -translate-y-1/2 z-20 bg-bg-secondary/95 backdrop-blur-sm border border-border-primary rounded-full w-14 h-14 flex items-center justify-center text-text-muted cursor-pointer transition-all duration-300 hover:bg-bullish-600 hover:border-bullish-600 hover:text-bg-primary hover:scale-110 disabled:opacity-20 disabled:cursor-not-allowed disabled:hover:scale-100 disabled:hover:bg-bg-secondary/95 shadow-xl" aria-label="Next tweet">
          <Icon
            id="material-symbols-chevron-right-rounded"
            className="w-6 h-6"
          />
        </button>

        <!-- Carousel wrapper -->
        <div class="carousel-wrapper w-full overflow-hidden rounded-xl">
          <div class="carousel-track flex transition-transform duration-500 ease-out">
            {
              twitterContent.map((item, index) => (
                <div class="carousel-slide w-full flex-shrink-0 flex flex-col items-center justify-start p-8 overflow-y-auto" data-index={index} style="max-height: 65vh;">
                  <div class="tweet-container flex justify-center w-full max-w-[550px]">
                    <Tweet theme="dark" id={item.url} />
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <div class="carousel-indicators flex justify-center gap-3 mt-6 pb-2">
        {
          twitterContent.map((_, index) => (
            <button
              class={`indicator w-3 h-3 rounded-full border-none cursor-pointer transition-all duration-300 ${index === 0 ? 'bg-bullish-600 scale-125' : 'bg-border-primary hover:bg-text-muted'}`}
              data-index={index}
              aria-label={`Go to tweet ${index + 1}`}
            />
          ))
        }
      </div>
    </div>
  </Modal>
</twitter-demos-modal>

<script>
  class TwitterDemosModal extends HTMLElement {
    private carouselTrack: HTMLElement | null = null;
    private prevButton: HTMLButtonElement | null = null;
    private nextButton: HTMLButtonElement | null = null;
    private indicators: NodeListOf<HTMLElement> | null = null;
    private currentIndex: number = 0;
    private totalSlides: number = 0;

    constructor() {
      super();
      this.carouselTrack = this.querySelector(".carousel-track");
      this.prevButton = this.querySelector(
        ".carousel-nav.prev",
      ) as HTMLButtonElement;
      this.nextButton = this.querySelector(
        ".carousel-nav.next",
      ) as HTMLButtonElement;
      this.indicators = this.querySelectorAll(".indicator");
      this.totalSlides = this.querySelectorAll(".carousel-slide").length;
    }

    connectedCallback() {
      this.setupEventListeners();
      this.updateCarousel();
      this.hide();
    }

    setupEventListeners() {
      // Set up backdrop and close button listeners
      const backdrop = this.querySelector(".modal-backdrop");
      const closeButton = this.querySelector(".modal-close");

      backdrop?.addEventListener("click", (e) => {
        if (e.target === backdrop) {
          this.hide();
        }
      });

      closeButton?.addEventListener("click", () => {
        this.hide();
      });

      // Close on escape key and handle arrow keys when visible
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && this.isVisible()) {
          this.hide();
        } else if (this.isVisible()) {
          if (e.key === "ArrowLeft") {
            this.goToPrev();
          } else if (e.key === "ArrowRight") {
            this.goToNext();
          }
        }
      });

      // Carousel navigation
      this.prevButton?.addEventListener("click", () => {
        this.goToPrev();
      });

      this.nextButton?.addEventListener("click", () => {
        this.goToNext();
      });

      // Indicator clicks
      this.indicators?.forEach((indicator, index) => {
        indicator.addEventListener("click", () => {
          this.goToSlide(index);
        });
      });
    }

    goToPrev() {
      this.currentIndex =
        this.currentIndex > 0 ? this.currentIndex - 1 : this.totalSlides - 1;
      this.updateCarousel();
    }

    goToNext() {
      this.currentIndex =
        this.currentIndex < this.totalSlides - 1 ? this.currentIndex + 1 : 0;
      this.updateCarousel();
    }

    goToSlide(index: number) {
      this.currentIndex = index;
      this.updateCarousel();
    }

    updateCarousel() {
      if (this.carouselTrack) {
        const translateX = -this.currentIndex * 100;
        this.carouselTrack.style.transform = `translateX(${translateX}%)`;
      }

      // Update indicators
      this.indicators?.forEach((indicator, index) => {
        indicator.classList.remove("bg-bullish-600", "scale-125");
        indicator.classList.add("bg-border-primary");
        
        if (index === this.currentIndex) {
          indicator.classList.remove("bg-border-primary");
          indicator.classList.add("bg-bullish-600", "scale-125");
        }
      });

      // Update navigation buttons
      if (this.prevButton) {
        this.prevButton.disabled = this.totalSlides <= 1;
      }
      if (this.nextButton) {
        this.nextButton.disabled = this.totalSlides <= 1;
      }
    }

    show() {
      const backdrop = this.querySelector(".modal-backdrop");
      if (backdrop) {
        backdrop.classList.remove("hidden");
        backdrop.classList.add("flex");
        document.body.style.overflow = "hidden";
        this.currentIndex = 0;
        this.updateCarousel();
        this.loadTwitterScript();
      }
    }

    hide() {
      const backdrop = this.querySelector(".modal-backdrop");
      if (backdrop) {
        backdrop.classList.add("hidden");
        backdrop.classList.remove("flex");
        document.body.style.overflow = "";
      }
    }

    isVisible() {
      const backdrop = this.querySelector(".modal-backdrop");
      return backdrop?.classList.contains("flex") || false;
    }

    private loadTwitterScript() {
      // Check if script is already loaded
      if (document.querySelector('script[src="https://platform.twitter.com/widgets.js"]')) {
        return;
      }

      const script = document.createElement('script');
      script.async = true;
      script.src = 'https://platform.twitter.com/widgets.js';
      document.head.appendChild(script);
    }
  }

  if (!customElements.get("twitter-demos-modal")) {
    customElements.define("twitter-demos-modal", TwitterDemosModal);
  }

  // Global function to show Twitter demos modal
  window.showTwitterDemosModal = () => {
    const modal = document.querySelector(
      "twitter-demos-modal",
    ) as TwitterDemosModal;
    if (modal) {
      modal.show();
    }
  };

  // Declare global function type
  declare global {
    interface Window {
      showTwitterDemosModal: () => void;
    }
  }
</script>

<style>
  /* Custom scrollbar for tweet containers */
  .tweet-container::-webkit-scrollbar {
    width: 6px;
  }

  .tweet-container::-webkit-scrollbar-track {
    background: var(--bg-secondary, #2a2a2a);
    border-radius: 3px;
  }

  .tweet-container::-webkit-scrollbar-thumb {
    background: var(--bullish-600, #4ade80);
    border-radius: 3px;
  }

  .tweet-container::-webkit-scrollbar-thumb:hover {
    background: var(--bullish-500, #22c55e);
  }

  /* Global styles for tweet content */
  .tweet-container :global(iframe) {
    min-height: 400px !important;
    max-height: none !important;
    overflow-y: visible !important;
    width: 100% !important;
  }

  .tweet-container :global(blockquote) {
    min-height: 400px !important;
    max-height: none !important;
    overflow-y: visible !important;
    margin: 0 !important;
    width: 100% !important;
  }

  .carousel-slide {
    scrollbar-width: thin;
    scrollbar-color: var(--bullish-600, #4ade80) var(--bg-secondary, #2a2a2a);
  }

  .carousel-slide::-webkit-scrollbar {
    width: 6px;
  }

  .carousel-slide::-webkit-scrollbar-track {
    background: var(--bg-secondary, #2a2a2a);
    border-radius: 3px;
  }

  .carousel-slide::-webkit-scrollbar-thumb {
    background: var(--bullish-600, #4ade80);
    border-radius: 3px;
  }

  .carousel-slide::-webkit-scrollbar-thumb:hover {
    background: var(--bullish-500, #22c55e);
  }

  @media (max-width: 768px) {
    .carousel-nav {
      display: none !important;
    }

    .carousel-slide {
      max-height: 60vh !important;
      padding: 1rem !important;
    }

    .tweet-container {
      max-width: 100% !important;
      width: 100% !important;
    }

    .tweet-container :global(iframe) {
      width: 100% !important;
      max-width: 100% !important;
      min-height: 350px !important;
      max-height: none !important;
    }

    .tweet-container :global(blockquote) {
      width: 100% !important;
      max-width: 100% !important;
      min-height: 350px !important;
      max-height: none !important;
    }

    .carousel-indicators {
      margin-top: 1rem !important;
      padding-bottom: 1rem !important;
    }
  }
</style>
