---
import Icon from "./Icon.astro";

interface ActionButton {
  text: string;
  href?: string;
  onclick?: string;
  target?: string;
  rel?: string;
}

interface Props {
  title: string;
  description: string;
  icon?: string;
  iconClass?: string;
  type?: string;
  date?: string;
  technologies?: string[];
  stars?: number;
  actionButton?: ActionButton;
  isInteractive?: boolean;
  className?: string;
  thumbnail?: {
    src: string;
    alt: string;
  };
}

const {
  title,
  description,
  icon,
  iconClass = "w-5 h-5 text-bullish-400",
  type,
  date,
  technologies,
  stars,
  actionButton,
  isInteractive = false,
  className = "",
  thumbnail
} = Astro.props;

const cardClass = isInteractive ? "card-interactive block group" : "card w-fit flex flex-col gap-3 col-span-1";
const CardTag = isInteractive ? "a" : "div";
---

<CardTag 
  class={`${cardClass} ${className}`}
  href={isInteractive && actionButton?.href ? actionButton.href : undefined}
  target={isInteractive && actionButton?.target ? actionButton.target : undefined}
  rel={isInteractive && actionButton?.rel ? actionButton.rel : undefined}
>
  {isInteractive ? (
    <!-- Interactive card layout (blog style) -->
    <div class="flex items-start justify-between gap-3 lg:gap-6">
      <div class="flex items-start gap-3 flex-1 min-w-0">
        {icon && (
          <div class="flex-shrink-0 w-10 h-10 bg-bullish-500/10 rounded-lg flex items-center justify-center mt-1">
            <Icon id={icon} className={iconClass} />
          </div>
        )}
        <div class="flex-1 min-w-0">
          <h2 class="text-lg lg:text-xl font-bold text-text-primary mb-2 line-clamp-2">
            {title}
          </h2>
          
          <p class="text-text-secondary text-base leading-relaxed mb-4 line-clamp-2">
            {description}
          </p>
          
          <div class="flex items-center gap-4 text-sm text-text-muted">
            {date && <time>{date}</time>}
            {type && (
              <>
                <span>â€¢</span>
                <span class="text-bullish-400 font-medium">{type}</span>
              </>
            )}
          </div>
        </div>
      </div>
      
      {thumbnail && (
        <div class="hidden lg:block flex-shrink-0 w-24 h-16 bg-bg-secondary rounded-lg overflow-hidden border border-border-primary">
          <img
            src={thumbnail.src}
            alt={thumbnail.alt}
            class="w-full h-full object-cover"
            loading="lazy"
          />
        </div>
      )}
      
      <div class="flex-shrink-0 opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:translate-x-1">
        <Icon
          id="material-symbols-arrow-outward"
          className="w-5 h-5 text-bullish-500"
        />
      </div>
    </div>
  ) : (
    <!-- Standard card layout (highlights/projects/tools style) -->
    <>
      <div class="flex items-center gap-3 mb-3 justify-between">
        <div class="flex items-center gap-3">
          {icon && (
            <div class="flex-shrink-0 w-10 h-10 bg-bullish-500/10 rounded-lg flex items-center justify-center">
              <Icon id={icon} className={iconClass} />
            </div>
          )}
          <h2 class="font-bold">{title}</h2>
        </div>
        {type && (
          <div class="">
            <p class="date">{type}</p>
          </div>
        )}
      </div>
      
      {technologies && (
        <p class="text-sm mb-2">
          Technologies used: {technologies.join(", ")}
        </p>
      )}
      
      <p class="text-sm mb-4">{description}</p>
      
      <div class="flex justify-between items-center mt-auto">
        <div>
          {stars !== undefined && (
            <a
              href={actionButton?.href}
              target="_blank"
              rel="noreferrer noopener"
              class="flex items-center gap-1 text-sm"
            >
              <Icon
                id="material-symbols-light-kid-star-sharp"
                className="w-4 h-4 text-yellow-400"
              />
              <span>{stars}</span>
            </a>
          )}
        </div>
        
        {actionButton && (
          actionButton.onclick ? (
            <button
              class="inline-flex items-center gap-2 text-sm link mt-auto self-end"
              onclick={actionButton.onclick}
            >
              {actionButton.text}
            </button>
          ) : (
            <a
              class="inline-flex items-center gap-2 text-sm link mt-auto self-end"
              href={actionButton.href}
              target={actionButton.target}
              rel={actionButton.rel}
            >
              {actionButton.text}
            </a>
          )
        )}
      </div>
    </>
  )}
</CardTag>