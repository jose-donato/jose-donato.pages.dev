---
import Layout from "../layouts/Layout.astro";
import Icon from "../components/Icon.astro";
import { PROJECTS } from "../utils/constants";

const technologies = Array.from(
  new Set(PROJECTS.flatMap((project) => project.technologies)),
);
const url = new URL(Astro.request.url);
const query = url.searchParams.get("q") || "";
const results = query
  ? PROJECTS.filter((project) => project.technologies.includes(query))
  : PROJECTS;

// Fetch GitHub stars for projects with GitHub URLs
const projectsWithStars = await Promise.all(
  results.map(async (project) => {
    // Check if the URL is a GitHub repository URL
    if (project.url?.includes("github.com")) {
      try {
        // Extract owner and repo from GitHub URL
        const urlParts = new URL(project.url).pathname
          .split("/")
          .filter(Boolean);
        if (urlParts.length >= 2) {
          const owner = urlParts[0];
          const repo = urlParts[1];

          // Fetch star count from GitHub API
          const response = await fetch(
            `https://api.github.com/repos/${owner}/${repo}`,
          );
          if (response.ok) {
            const data = await response.json();
            return { ...project, stars: data.stargazers_count };
          }
        }
      } catch (error) {
        console.error(`Error fetching stars for ${project.title}:`, error);
      }
    }
    return project;
  }),
);
---

<Layout>
  <div class="space-y-20">
    <div>
      <ul class="">
        <form class="space-y-2">
          <div class="flex flex-wrap gap-2">
            {
              technologies.map((tech) => (
                <button
                  type="submit"
                  name="q"
                  value={tech}
                  class={query === tech ? "btn" : "btn-outline"}
                >
                  {tech}
                </button>
              ))
            }
          </div>
          {
            query && (
              <button class="btn gap-2 ml-auto" type="submit" name="q" value="">
                <Icon id="system-uicons-reset" className="w-4 h-4" />
                Reset
              </button>
            )
          }
        </form>
        <ul class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          {
            projectsWithStars.map((project) => {
              // Assign icons based on project type
              let iconId = "material-symbols-code";
              if (project.type === "website") {
                iconId = "material-symbols-web";
              } else if (project.type === "mobile app") {
                iconId = "material-symbols-smartphone";
              } else if (project.type === "browser extension") {
                iconId = "material-symbols-extension";
              } else if (project.type === "desktop app") {
                iconId = "material-symbols-build";
              } else if (project.type === "web app") {
                iconId = "material-symbols-web";
              }

              return (
                <li class="card flex flex-col gap-3">
                  <div class="flex items-start gap-3">
                    <div class="flex-shrink-0 w-10 h-10 bg-bullish-500/10 rounded-lg flex items-center justify-center">
                      <Icon id={iconId} className="w-5 h-5 text-bullish-400" />
                    </div>
                    <div class="flex-1">
                      <h2 class="font-bold">{project.title}</h2>
                      <p class="rounded-full px-1.5 text-xs leading-normal bg-bg-tertiary text-text-secondary w-fit mt-1">
                        {project.type}
                      </p>
                    </div>
                  </div>
                  <p class="text-sm">
                    Technologies used: {project.technologies.join(", ")}
                  </p>
                  <p class="text-sm">{project.description}</p>
                  <div class="flex justify-between mt-auto">
                    <div>
                      {project.stars !== undefined && (
                        <a
                          href={project.url}
                          target="_blank"
                          rel="noreferrer noopener"
                          class="flex items-center gap-1 text-sm"
                        >
                          <Icon
                            id="material-symbols-light-kid-star-sharp"
                            className="w-4 h-4 text-yellow-400"
                          />
                          <span>{project.stars}</span>
                        </a>
                      )}
                    </div>
                    <a
                      href={project.url}
                      rel="noreferrer noopener"
                      target="_blank"
                      class="link text-sm"
                    >
                      Read more
                    </a>
                  </div>
                </li>
              );
            })
          }
        </ul>
      </ul>
    </div>
  </div>
</Layout>
