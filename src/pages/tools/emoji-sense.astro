---
import Layout from "../../layouts/Layout.astro";
import { createGoogleGenerativeAI } from "@ai-sdk/google";
import { generateText } from "ai";
import { GOOGLE_API_KEY } from "astro:env/server";

const googleGenerativeAI = createGoogleGenerativeAI({
	apiKey: GOOGLE_API_KEY,
});
const model = googleGenerativeAI("gemini-1.5-flash");

let error = "";
let result = "";
let textValue = "";
let emojiCountValue = "auto";

if (Astro.request.method === "POST") {
	try {
		const formData = await Astro.request.formData();
		const text = formData.get("text");
		const emojiCount = formData.get("emojiCount") || "auto";

		textValue = typeof text === "string" ? text : "";
		emojiCountValue = typeof emojiCount === "string" ? emojiCount : "auto";

		if (!textValue || textValue.length === 0) {
			error = "No text provided";
		} else if (textValue.length > 500) {
			error = "Text cannot exceed 500 characters";
		} else {
			const response = await generateText({
				model: model,
				prompt: `You are an emoji suggester.
You will be given a text and a number of emojis you should suggest.


Guidelines:
- The number may be "auto" or a number. If it is "auto", you should suggest as many emojis as possible to describe the text. If it is a number, you should suggest that many emojis.
- Only include the emojis in your response ALWAYS.
- NEVER INCLUDE TEXT IN YOUR RESPONSE.

Example:
Text: I'm so happy to see you!
Emoji count: 2
Response: 😊👋

Text: Hello, world!
Emoji count: 2
Response: 🌍👋

Text: I'm so happy to see you!
Emoji count: auto
Response: 😊👋

Text: Today I built a new website!
Emoji count: 1
Response: 🌐

Text: ${textValue}
Emoji count: ${emojiCountValue}`,
				maxTokens: 50,
			});
			result = response?.text ?? "";
			if (!result) {
				error =
					"Failed to generate suggestions, the AI returned an empty response.";
			}
		}
	} catch (apiError) {
		console.error("Error generating emoji suggestions:", apiError);
		error = "Failed to generate emoji suggestions due to an internal error.";
	}
}
---

<Layout seo={{ title: "EmojiSense - AI-powered Emoji Suggestions" }}>
  <div class="max-w-[700px] mx-auto">
    <h1 class="text-3xl font-bold mb-4 text-center">
      <span class="underline-animation">Emoji</span>Sense
    </h1>

    <div class="flex justify-center items-center flex-col gap-2 my-5">
      <p>Get AI-powered emoji suggestions for your text.</p>
    </div>

    <div class="card p-6">
      <form method="POST" id="emojiForm">
        <div class="mb-4">
          <label for="text" class="block text-sm font-medium mb-1">
            Enter your text (max 500 characters)
          </label>
          <textarea
            id="text"
            name="text"
            rows="4"
            maxlength="500"
            required
            placeholder="Type your text here..."
            class="w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
          >{textValue}</textarea>
          <p class="text-xs text-gray-500 mt-1" id="charCount">0/500 characters</p>
        </div>
        
        <div class="mb-4">
          <label for="emojiCount" class="block text-sm font-medium mb-1">
            Number of emojis
          </label>
          <select
            id="emojiCount"
            name="emojiCount"
            class="w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2"
          >
            <option value="auto" selected={emojiCountValue === 'auto'}>Auto</option>
            <option value="1" selected={emojiCountValue === '1'}>1</option>
            <option value="2" selected={emojiCountValue === '2'}>2</option>
            <option value="3" selected={emojiCountValue === '3'}>3</option>
          </select>
        </div>
        
        <div class="flex justify-end">
        <button 
          type="submit" 
          id="submitBtn"
          class="btn"
          >
            Suggest Emojis
          </button>
        </div>
      </form>
      
      <div class="mt-6" data-result-container>
        <h2 class="text-lg font-semibold mb-2">Suggested Emojis</h2>
        <div id="resultDisplay" class="h-16 flex items-center justify-center">
          {error && <div class="text-red-500" data-error-message>{error}</div>}
          {result && <div class="text-4xl transition-all duration-300 ease-in-out" data-result-message>{result}</div>}
          {!error && !result && (
            <div class="text-center text-gray-500">
              Your suggested emojis will appear here
            </div>
          )}
        </div>
      </div>
    </div>
    
    <div class="card p-6 mt-6">
      <h2 class="font-bold text-lg mb-4">How it works</h2>
      <p>EmojiSense uses advanced AI to analyze your text and suggest the most appropriate emojis. The algorithm considers:</p>
      <ul class="list-disc list-inside space-y-2 mt-2">
        <li>The sentiment of your message</li>
        <li>Key topics and themes</li>
        <li>Context and intended audience</li>
      </ul>
      <p class="mt-4">You can specify how many emojis you want, or let the AI decide the optimal number.</p>
    </div>
  </div>
</Layout>

<script>
  const textArea = document.getElementById('text') as HTMLTextAreaElement;
  const charCount = document.getElementById('charCount') as HTMLElement;

  if (textArea && charCount) {
    const updateCount = () => {
      const count = textArea.value.length;
      charCount.textContent = `${count}/500 characters`;
    };
    
    textArea.addEventListener('input', updateCount);
    
    updateCount();
  }

  const resultContainer = document.querySelector('[data-result-container]') as HTMLElement;
  const errorMessage = document.querySelector('[data-error-message]');
  const resultMessage = document.querySelector('[data-result-message]');

  if (resultContainer && (errorMessage || resultMessage)) {
    requestAnimationFrame(() => {
      window.scrollTo({
        top: resultContainer.offsetTop - 100,
        behavior: 'smooth'
      });
    });
  }
</script>
