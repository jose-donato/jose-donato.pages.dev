---
import Layout from "../layouts/Layout.astro";
import Icon from "../components/Icon.astro";
import ContentCard from "../components/ContentCard.astro";
import { getCollection } from "astro:content";
import {
  socialMediaContent,
  parseDate,
  extractYouTubeId,
} from "../data/socialMedia";

const allPosts = await getCollection("blog");

// Handle filtering by content type
const url = new URL(Astro.request.url);
const contentType = url.searchParams.get("type") || "all"; // all, articles, social

// Get all posts and social media content
const filteredPosts = allPosts;

// Filter social media content to only include YouTube
const filteredSocialMedia = socialMediaContent.filter(
  (item) => item.type === "youtube",
);

// Create unified content array for mixed display
interface UnifiedContent {
  type: "article" | "social";
  date: string;
  data: any;
}

const unifiedContent: UnifiedContent[] = [
  ...filteredPosts.map((post) => ({
    type: "article" as const,
    date: post.data.date || "01-01-1970",
    data: post,
  })),
  ...filteredSocialMedia.map((item) => ({
    type: "social" as const,
    date: item.date,
    data: item,
  })),
];

// Sort all content by date (newest first)
const sortedContent = unifiedContent.sort((a, b) => {
  const dateA = parseDate(a.date);
  const dateB = parseDate(b.date);
  return dateB.getTime() - dateA.getTime();
});

// Filter by content type
const finalContent =
  contentType === "all"
    ? sortedContent
    : sortedContent.filter((item) =>
        contentType === "articles"
          ? item.type === "article"
          : item.type === "social",
      );
---

<Layout
  seo={{
    title: "Jos√© Donato | Blog",
    description:
      "Personal blog with articles about programming, security, and more.",
  }}
>
  <script async src="https://platform.twitter.com/widgets.js"></script>

  <div class="space-y-8">
    <!-- Content Type Filter -->
    <div class="flex flex-col lg:flex-row items-center justify-between gap-4">
      <div class="flex items-center gap-4">
        <span class="text-sm font-medium text-text-primary">Show:</span>
        <div class="flex gap-2">
          <a
            href="/blog"
            class={`px-3 py-1 text-sm rounded-lg transition-colors ${
              contentType === "all"
                ? "bg-bullish-600/20 text-bullish-800 dark:text-bullish-300 border border-bullish-600/30"
                : "text-text-muted hover:text-text-primary hover:bg-surface-secondary"
            }`}
          >
            All Content
          </a>
          <a
            href="/blog?type=articles"
            class={`px-3 py-1 text-sm rounded-lg transition-colors ${
              contentType === "articles"
                ? "bg-bullish-600/20 text-bullish-800 dark:text-bullish-300 border border-bullish-600/30"
                : "text-text-muted hover:text-text-primary hover:bg-surface-secondary"
            }`}
          >
            Articles
          </a>
          <a
            href="/blog?type=social"
            class={`px-3 py-1 text-sm rounded-lg transition-colors ${
              contentType === "social"
                ? "bg-bullish-600/20 text-bullish-800 dark:text-bullish-300 border border-bullish-600/30"
                : "text-text-muted hover:text-text-primary hover:bg-surface-secondary"
            }`}
          >
            Videos
          </a>
        </div>
      </div>

      <!-- Stats -->
      <div class="flex items-center gap-4 text-sm text-text-muted">
        <span
          ><strong class="text-bullish-500">{filteredPosts.length}</strong> articles</span
        >
        <span class="text-border-primary">‚Ä¢</span>
        <span
          ><strong class="text-bullish-400">{filteredSocialMedia.length}</strong
          > videos</span
        >
      </div>
    </div>

    <!-- Mixed Content List -->
    <div class="space-y-6">
      {
        finalContent.map((item) => {
          if (item.type === "article") {
            const post = item.data;
            return (
              <article>
                <ContentCard
                  title={post.data.title}
                  description={post.data.snippet || ""}
                  icon="material-symbols-article"
                  type="Article"
                  date={post.data.date}
                  actionButton={{
                    text: "",
                    href: `/blog/${post.id}`
                  }}
                  isInteractive={true}
                />
              </article>
            );
          } else {
            // YouTube video content styled as article card
            const videoItem = item.data;
            const videoId = extractYouTubeId(videoItem.url);
            const thumbnailUrl = `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`;

            return (
              <article>
                <ContentCard
                  title={videoItem.title || "YouTube Video"}
                  description={videoItem.description || ""}
                  icon="material-symbols-play-circle"
                  type="Video"
                  date={videoItem.date}
                  actionButton={{
                    text: "",
                    href: `/blog/${videoItem.id}`
                  }}
                  thumbnail={{
                    src: thumbnailUrl,
                    alt: `${videoItem.title || "YouTube Video"} thumbnail`
                  }}
                  isInteractive={true}
                />
              </article>
            );
          }
        })
      }
    </div>

    {/* Empty State */}
    {
      finalContent.length === 0 && (
        <div class="text-center py-16">
          <div class="text-6xl mb-4">üìù</div>
          <h3 class="text-xl font-semibold text-text-primary mb-2">
            No content found
          </h3>
          <p class="text-text-muted">
            {contentType === "articles"
              ? "No articles available yet."
              : contentType === "social"
                ? "No videos available yet."
                : "No content available yet."}
          </p>
          {contentType !== "all" && (
            <a href="/blog" class="btn-primary mt-4 inline-flex">
              View All Content
            </a>
          )}
        </div>
      )
    }
  </div>
</Layout>
