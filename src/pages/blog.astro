---
import Layout from "../layouts/Layout.astro";
import Icon from "../components/Icon.astro";
import { getCollection } from "astro:content";
//import { Tweet } from "@astro-community/astro-embed-twitter";
//import { YouTube } from "@astro-community/astro-embed-youtube";
const allPosts = await getCollection("blog");
// Extract all topics from posts and create a unique, sorted array
const allTopics = [
  ...new Set(allPosts.flatMap((post) => post.data.topics?.split(" ") || [])),
].sort();
// Handle filtering by topic
const url = new URL(Astro.request.url);
const topic = url.searchParams.get("topic") || "";
const filteredPosts = topic
  ? allPosts.filter((post) => post.data.topics?.includes(topic))
  : allPosts;
---

<Layout
  seo={{
    title: "Jos√© Donato | Blog",
    description:
      "Personal blog with articles about programming, security, and more.",
  }}
>
  <script async src="https://platform.twitter.com/widgets.js"></script>

  <div class="space-y-12">
    <!-- Header Section -->
    <div class="text-center space-y-4">
      <h1 class="text-3xl md:text-4xl font-bold text-text-primary">
        Blog <span class="text-bullish-500">Articles</span>
      </h1>
      <p class="text-text-muted text-lg max-w-2xl mx-auto">
        Insights on trading technology, web development, and financial
        engineering
      </p>
    </div>

    <!-- Stats Section -->
    <div class="flex justify-center">
      <div
        class="bg-bg-secondary/50 backdrop-blur-sm px-6 py-4 border border-border-primary/50"
      >
        <div class="flex items-center gap-8">
          <div class="text-center">
            <div class="text-2xl font-bold text-bullish-500">
              {filteredPosts.length}
            </div>
            <div class="text-sm text-text-muted">Articles</div>
          </div>
          <div class="h-8 w-[1px] bg-border-primary"></div>
          <div class="text-center">
            <div class="text-2xl font-bold text-text-primary">
              {allTopics.length}
            </div>
            <div class="text-sm text-text-muted">Topics</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Articles Grid -->
    <div class="grid gap-6 md:gap-8">
      {
        filteredPosts
          .sort((a, b) => {
            const datePartsA = a.data.date?.split("-").map(Number);
            const datePartsB = b.data.date?.split("-").map(Number);

            // Create dates ensuring parts exist and month is adjusted (0-indexed)
            const dateA =
              datePartsA && datePartsA.length === 3
                ? new Date(datePartsA[2], datePartsA[1] - 1, datePartsA[0])
                : new Date(0); // Fallback for invalid/missing dates

            const dateB =
              datePartsB && datePartsB.length === 3
                ? new Date(datePartsB[2], datePartsB[1] - 1, datePartsB[0])
                : new Date(0); // Fallback for invalid/missing dates

            // Compare timestamps for descending order
            return dateB.getTime() - dateA.getTime();
          })
          .map((post, index) => (
            <article class={`group ${index === 0 ? "md:col-span-2" : ""}`}>
              <a
                href={`/blog/${post.id}`}
                class="block card-interactive h-full"
              >
                <div class="flex flex-col h-full">
                  {/* Article Header */}
                  <div class="flex items-start justify-between mb-4">
                    <div class="flex-1">
                      <h2
                        class={`font-bold text-text-primary group-hover:text-bullish-400 transition-colors line-clamp-2 ${index === 0 ? "text-2xl md:text-3xl mb-3" : "text-xl mb-2"}`}
                      >
                        {post.data.title}
                      </h2>
                      {post.data.snippet && (
                        <p
                          class={`text-text-secondary line-clamp-3 ${index === 0 ? "text-lg leading-relaxed" : "text-base"}`}
                        >
                          {post.data.snippet}
                        </p>
                      )}
                    </div>
                  </div>

                  {/* Article Footer */}
                  <div class="flex items-center justify-between mt-auto pt-4 border-t border-border-primary/30">
                    <div class="flex items-center gap-3">
                      {post.data.date && (
                        <time class="text-sm text-text-muted font-mono">
                          {post.data.date}
                        </time>
                      )}
                      {post.data.readingTime && (
                        <>
                          <span class="text-text-muted">‚Ä¢</span>
                          <span class="text-sm text-text-muted">
                            {post.data.readingTime} min read
                          </span>
                        </>
                      )}
                    </div>

                    {post.data.topics && (
                      <div class="flex flex-wrap gap-2">
                        {post.data.topics
                          .split(" ")
                          .slice(0, 2)
                          .map((topic) => (
                            <span class="px-2 py-1 text-xs font-medium bg-bullish-600/10 text-bullish-400  border border-bullish-600/20">
                              {topic}
                            </span>
                          ))}
                      </div>
                    )}
                  </div>

                  {/* Hover Effect Arrow */}
                  <div class="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:translate-x-1">
                    <Icon
                      id="material-symbols-arrow-outward"
                      className="w-5 h-5 text-bullish-500"
                    />
                  </div>
                </div>
              </a>
            </article>
          ))
      }
    </div>

    {/* Empty State */}
    {
      filteredPosts.length === 0 && (
        <div class="text-center py-16">
          <div class="text-6xl mb-4">üìù</div>
          <h3 class="text-xl font-semibold text-text-primary mb-2">
            No articles found
          </h3>
          <p class="text-text-muted">
            {topic
              ? `No articles found for topic "${topic}"`
              : "No articles available yet."}
          </p>
          {topic && (
            <a href="/blog" class="btn-primary mt-4">
              View All Articles
            </a>
          )}
        </div>
      )
    }
  </div>
</Layout>
